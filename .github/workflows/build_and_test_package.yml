name: Build pkg-package and create release

on:
  push:
    branches-ignore:
      - '*'
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and publish a pkg package of Kleened
    env:
      POUDRIERE_JAIL : "14.1-RELEASE"
    #permissions:
      # Needed when creating releases
    #  contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Build kleened pkg-package with Poudriere
        id: kleened-pkg-build
        uses: vmactions/freebsd-vm@v1.1.5
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        with:
          envs: 'POUDRIERE_JAIL'
          usesh: true
          run: |
            #env
            freebsd-version

            ###### Configure ZFS ######
            kldload zfs
            sysrc -f /boot/loader.conf zfs_load="YES"
            sysrc zfs_enable="YES"

            truncate -s 10G /home/runner/zpool.disk
            zpool create -O atime=off -f zroot /home/runner/zpool.disk

            ###### Install & configure Poudriere ######
            #echo "ZPOOL=zroot" > /usr/local/etc/poudriere.conf
            #echo "BASEFS=/usr/local/poudriere" >> /usr/local/etc/poudriere.conf
            #echo "DISTFILES_CACHE=/usr/ports/distfiles" >> /usr/local/etc/poudriere.conf
            #echo "RESOLV_CONF=/etc/resolv.conf" >> /usr/local/etc/poudriere.conf
            #pkg install -y poudriere git
            #mkdir -p /usr/ports/distfiles
            #poudriere jail -c -j port-tester -v $POUDRIERE_JAIL
            #poudriere ports -c -p development

            ####### Build Kleened #######
            ##cp -r /home/runner/work/ports/sysutils/kleene-daemon /usr/local/poudriere/ports/development/sysutils/
            #cp -r ports/sysutils/kleene-daemon /usr/local/poudriere/ports/development/sysutils/
            #poudriere testport -j port-tester -p development -o sysutils/kleene-daemon
            #poudriere bulk -j port-tester -p development sysutils/kleene-daemon

            #cp /usr/local/poudriere/data/packages/port-tester-development/All/kleene-daemon-*.pkg .

            ### used for testing:
            fetch https://github.com/kleene-project/kleened/releases/download/v0.1.0-rc.1/kleened-0.1.0rc1_FreeBSD14-amd64.pkg -o kleene-daemon-0.1.0.r2.pkg

            ###### Copy package into workdir and save filename #######
            PKG_FILE=$(ls kleene-daemon-*)
            PKG_FILE_TRIM=${PKG_FILE%.pkg}
            NEW_PKG_FILE=${PKG_FILE_TRIM}-freebsd14.pkg
            mv ${PKG_FILE} ${NEW_PKG_FILE}
            echo "PKG_FILE=${NEW_PKG_FILE}" >> "$GITHUB_ENV"
            echo "PKG_FILE=${NEW_PKG_FILE}" >> "$GITHUB_OUTPUT"

      - name: Create artifact with pkg package
        uses: actions/upload-artifact@v4
        #if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        with:
          name: kleene_pkg
          path: ${{ steps.kleened-pkg-build.outputs.PKG_FILE }}

      - name: Make a new release of Kleened with the builded pkg-package as an asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ steps.kleened-pkg-build.outputs.PKG_FILE }}
  test:
    runs-on: ubuntu-latest
    needs: build
    name: Test kleened pkg package
    permissions:
      # Needed when creating releases
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          repository: kleene-project/klee
          ref: ${{ github.ref_type == 'branch' && github.ref_name || 'main' }}
      - uses: actions/download-artifact@v4
        with:
          name: kleene_pkg
      - name: Test newly built kleened package
        uses: vmactions/freebsd-vm@v1.1.5
        #if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        with:
          usesh: true
          run: |
            freebsd-version
            echo "TESTING"
            ls
            echo "TESTING DONE"

            ###### Configure ZFS ######
            kldload zfs
            sysrc -f /boot/loader.conf zfs_load="YES"
            sysrc zfs_enable="YES"

            truncate -s 10G /home/runner/zpool.disk
            zpool create -O atime=off -f zroot /home/runner/zpool.disk

            ##### Install Kleened
            pkg install -y kleene-daemon-*.pkg
            sudo sysrc kleened_enable=yes
            service kleened init
            service kleened start

            ##### Run Klee-tests
            #git clone -b ${{ github.ref_type == 'branch' && github.ref_name || 'main' }} https://github.com/kleene-project/klee.git
            pkg install -y py311-poetry
            #cd klee
            poetry install
            poetry run pytest -vv -x
